apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
data:
  envoy.yaml: |
    admin:
      access_log_path: "/dev/null"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9901
    dynamic_resources:
      cds_config:
        path_config_source:
          path: "/etc/envoy/clusters.yaml"
          watched_directory:
            path: "/etc/envoy"
    static_resources:
      listeners:
        - name: listener_0
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 10000
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: ingress_http
                    # drain_timeout: 2s
                    # common_http_protocol_options:
                    #   max_connection_duration: "5s"
                    access_log:
                    - name: envoy.access_loggers.stdout
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                    rds:
                      route_config_name: local_route
                      config_source:
                        path_config_source:
                          path: "/etc/envoy/routes.yaml"
                          watched_directory:
                            path: "/etc/envoy"
                    http_filters:
                      - name: envoy.filters.http.compressor.gzip
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.compressor.v3.Compressor
                          response_direction_config:
                            # common_config:
                            #   min_content_length: 100
                            #   content_type:
                            #   - text/html
                            #   - application/json
                            disable_on_etag_header: true
                          request_direction_config:
                            common_config:
                              enabled:
                                default_value: false
                                runtime_key: request_compressor_enabled
                          compressor_library:
                            name: text_optimized
                            typed_config:
                              "@type": type.googleapis.com/envoy.extensions.compression.gzip.compressor.v3.Gzip
                              memory_level: 3
                              window_bits: 10
                              compression_level: BEST_COMPRESSION
                              compression_strategy: DEFAULT_STRATEGY
                      - name: envoy.filters.http.compressor.brotli
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.compressor.v3.Compressor
                          response_direction_config:
                            disable_on_etag_header: true
                          request_direction_config:
                            common_config:
                              enabled:
                                default_value: false
                                runtime_key: request_compressor_enabled
                          compressor_library:
                            name: text_optimized
                            typed_config:
                              "@type": type.googleapis.com/envoy.extensions.compression.brotli.compressor.v3.Brotli
                              input_block_bits: 20 # memory usage
                              window_bits: 15   # Window size
                              quality: 11 # Highest compression (like gzip BEST_COMPRESSION)
                              encoder_mode: Generic # Default strategy
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router


  routes.yaml: |
    version_info: "0"
    resources:
      - "@type": type.googleapis.com/envoy.config.route.v3.RouteConfiguration
        name: local_route
        virtual_hosts:
          - name: grpc_service
            domains: ["grpc-streaming.example.com"]
            routes:
              - match:
                  prefix: "/"
                route:
                  max_stream_duration:
                    max_stream_duration: 10s
                  cluster: grpc_streaming_service
                  timeout: 0s
          - name: local_service_1
            domains: ["foo.example.com"]
            routes:
              - match:
                  prefix: "/bar"
                route:
                  weighted_clusters:
                    clusters:
                      - name: service_cluster_1
                        weight: 100
                      # - name: service_cluster_2
                      #   weight: 100
                  timeout: 0s

  clusters.yaml: |
    version_info: "0"
    resources:
      - "@type": type.googleapis.com/envoy.config.cluster.v3.Cluster
        name: grpc_streaming_service
        connect_timeout: 0.25s
        type: static
        lb_policy: round_robin
        typed_extension_protocol_options:
          envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
            "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
            # common_http_protocol_options:
            #   max_connection_duration: "5s"
            explicit_http_config:
              http2_protocol_options: {}
        load_assignment:
          cluster_name: grpc_streaming_service
          endpoints:
            - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: 10.43.1.139
                        port_value: 80
      - "@type": type.googleapis.com/envoy.config.cluster.v3.Cluster
        name: service_cluster_1
        connect_timeout: 0.25s
        type: strict_dns
        lb_policy: round_robin
        health_checks:
          - timeout: 1s
            interval: 1s
            unhealthy_threshold: 1
            healthy_threshold: 1
            http_health_check:
              path: "/health"
        load_assignment:
          cluster_name: service_cluster
          endpoints:
            - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: stable-echo-server-service
                        port_value: 80
      - "@type": type.googleapis.com/envoy.config.cluster.v3.Cluster
        name: service_cluster_2
        connect_timeout: 0.25s
        type: strict_dns
        lb_policy: round_robin
        health_checks:

      #     # The time to wait for a health check response. If the timeout is reached the
      #     # health check attempt will be considered a failure.
      #     - timeout: 1s

      #       # interval between health checks
      #       interval: 10s

      #       # The number of unhealthy health checks required before a host is marked
      #       # unhealthy.
      #       #
      #       # if a host responds with a code not in expected_statuses or retriable_statuses
      #       # this threshold is ignored and the host is considered immediately unhealthy
      #       unhealthy_threshold: 3

      #       # The number of healthy health checks required before a host is marked
      #       # healthy. during startup, only a single successful health check is
      #       # required to mark a host healthy.
      #       healthy_threshold: 5
      #       http_health_check:
      #         path: "/health_cluster_2"
      #         request_headers_to_add:
      #           - header:
      #               key: "X-ECHO-TIME"
      #               value: "3000"
      #   load_assignment:
      #     cluster_name: service_cluster
      #     endpoints:
      #       - lb_endpoints:
      #           - endpoint:
      #               address:
      #                 socket_address:
      #                   address: canary-echo-server-service
      #                   port_value: 80